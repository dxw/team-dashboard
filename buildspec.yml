version: 0.2

phases:
  pre_build:
    commands:
      - echo Build started on `date`
      - echo Entered the pre_build phase...
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - echo Building the Docker image...
      - chmod +x docker-entrypoint.sh
      - docker build --build-arg RAILS_ENV=$INFRA_ENV -t $CONTAINER_NAME:test .
  build:
    commands:
      - echo Testing the newly built Docker image...
      - docker run --name test -d -e RAILS_ENV=test $CONTAINER_NAME:test /bin/bash -c "tail -f /dev/null"
      - git config --global credential.helper store
      - git config --global url."https://github.com/".insteadOf 'git@github.com:'
      - echo "https://$GIT_USERNAME:$GIT_PASSWORD@github.com" > /root/.git-credentials
      - docker exec test bundle install --with test --retry 3 --jobs 20
      - docker rm -f test
  post_build:
    commands:
      - IMAGE_TAG=commit-$CODEBUILD_RESOLVED_SOURCE_VERSION
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_NAME
      - echo Tagging the successfully tested image as latest...
      - docker tag $CONTAINER_NAME:test $REPOSITORY_URI:latest
      - docker tag $CONTAINER_NAME:test $REPOSITORY_URI:$IMAGE_TAG
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Build completed on `date`
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files: imagedefinitions.json
